plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'sideproject'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //mapstruct (model mapper)
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    //p6spy
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

    /**
     * java-jwt
     * okta-jjwt
     */
    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    //Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // database h2, posrgresql
    runtimeOnly 'com.h2database:h2'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql:42.6.0'

    // email 인증
    implementation 'javax.mail:mail:1.4.7'
    implementation 'org.springframework:spring-context-support:5.3.9'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.6.3'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	// gson json <-> json string mapping library
//	implementation 'com.google.code.gson:gson:2.9.0'

    // Random String Utils Method
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    //firebase
    implementation 'com.google.firebase:firebase-admin:9.4.1'
    implementation("com.squareup.okhttp3:okhttp:4.10.0")

    //prometheus
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    //spring-retry
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-aspects'

}

def querydslSrcDir = 'src/main/generated'
clean {
    delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

tasks.named('test') {
    useJUnitPlatform()
}

task copyGitSubmodule(type: Copy) {
    from './config'
    include '*.yml'
    into './src/main/resources'
}

task copyFirebaseKeyFromGitSubmodule(type: Copy) {
    from('./config') {
        include 'firebase/**'
    }
    into './src/main/resources'
}

jar {
    enabled = false
}
